{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Redis Queue Template",

  "Parameters" : {
	"KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "Default" : "development",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "InstanceType" : {
	  "Type" : "String",
	  "Default" : "t1.micro",
	  "AllowedValues" : [ "t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge"]
	},

	"S3Bucket" : {
	  "Description" : "Bucket for storing and retrieving artifacts",
	  "Type" : "String"
    }
  },

  "Mappings" : {
	"AWSInstanceType2Arch" : {
      "t1.micro"   : { "Arch" : "64" },
      "m1.small"   : { "Arch" : "64" },
	  "m1.medium"  : { "Arch" : "64" },
	  "m1.large"   : { "Arch" : "64" },
	  "m1.xlarge"  : { "Arch" : "64" },
	  "m2.xlarge"  : { "Arch" : "64" },
	  "m2.2xlarge" : { "Arch" : "64" },
	  "m2.4xlarge" : { "Arch" : "64" },
	  "c1.medium"  : { "Arch" : "64" },
	  "c1.xlarge"  : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-7f418316", "64" : "ami-7341831a" },
      "us-west-1"      : { "32" : "ami-951945d0", "64" : "ami-971945d2" },
      "us-west-2"      : { "32" : "ami-16fd7026", "64" : "ami-10fd7020" },
      "eu-west-1"      : { "32" : "ami-24506250", "64" : "ami-20506254" },
      "ap-southeast-1" : { "32" : "ami-74dda626", "64" : "ami-7edda62c" },
      "ap-northeast-1" : { "32" : "ami-dcfa4edd", "64" : "ami-e8fa4ee9" }
    }
  },

  "Resources" : {

	"User" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect":"Allow",
            "Action":"*",
            "Resource":"*"
          }
        ]}
        }]
      }
    },

	"HostKeys" : {
	  "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
	    "UserName" : { "Ref" : "User" }
	  }
	},

    "WebServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
	    "AWS::CloudFormation::Init" : {
		  "config" : {
			"files" : {
			  "/tmp/redis-2.6.2-1.el5.x86_64.rpm" : {
                "source" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/resources/rpm/redis-2.6.2-1.el5.x86_64.rpm"]]},
                "mode" : "000755",
                "owner" : "ec2-user",
                "group" : "ec2-user",
				"authentication" : "S3AccessCreds"
              }
			}
		  }
	    },
		"AWS::CloudFormation::Authentication" : {
		  "S3AccessCreds" : {
		    "type" : "S3",
		    "accessKeyId" : { "Ref" : "HostKeys" },
		    "secretKey" : {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
		    "buckets" : [ { "Ref" : "S3Bucket" } ]
		  }
		}
	  },
	  "Properties": {
		"ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
	                { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
		"InstanceType"     : { "Ref" : "InstanceType" },
		"SecurityGroups"   : [ { "Ref" : "FrontendGroup" } ],
		"KeyName"        : { "Ref" : "KeyName" },
		"Tags": [ { "Key": "Name", "Value": "Redis" } ],
		"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
		  "#!/bin/bash -v\n",

	  	  "yum update -y aws-cfn-bootstrap\n",

		  "# Install Packages\n",
		  "/opt/aws/bin/cfn-init -v -s ", { "Ref" : "AWS::StackName" }, " -r WebServer ",
		  "    --access-key ", { "Ref" : "HostKeys" },
		  "    --secret-key ", { "Fn::GetAtt" : [ "HostKeys", "SecretAccessKey" ]},
		  "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

		  "rpm -Uvh /tmp/redis-2.6.2-1.el5.x86_64.rpm\n",
		  "sysctl vm.overcommit_memory=1\n",
		  "redis-server\n"
		]]}}
	  }
	},

	"FrontendGroup" : {
	  "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
	    "GroupDescription" : "Enable Redis Access",
		"SecurityGroupIngress" : [
		  { "IpProtocol" : "tcp", "FromPort" : "6379", "ToPort" : "6379", "CidrIp" : "0.0.0.0/0" },
		]
	  }
	}
  },

  "Outputs" : {
	"RedisIPAddress" : {
      "Value" : { "Fn::GetAtt" : ["WebServer", "PublicDnsName"]}
    }
  }
}
